schema {
  query: Query
}

"Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ENUM_VALUE

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type AcceptingStore {
  category: Category!
  categoryId: Int!
  contact: Contact!
  contactId: Int!
  description: String!
  id: Int!
  name: String!
}

type Address {
  location: String!
  postalCode: String!
  state: String!
  street: String!
}

type Category {
  id: Int!
  name: String!
}

type Contact {
  email: String!
  id: Int!
  telephone: String!
  website: String!
}

type PhysicalStore {
  address: Address
  addressId: Int!
  id: Int!
  store: AcceptingStore
  storeId: Int!
}

type Query {
  "Return list of all accepting stores."
  physicalStores: [PhysicalStore!]!
  physicalStoresById(params: ParamsInput!): [PhysicalStore!]!
}

input ParamsInput {
  ids: [Int!]!
}
